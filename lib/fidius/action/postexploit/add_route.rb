module FIDIUS
  module Action
    module PostExploit
      class AddRoute
        include FIDIUS::Action::PostExploit::PostExploit

        def get_loudness_host
          10
        end

        def get_loudness_net
          0
        end

        def autorun
          true #TODO: HM: change to false if we have a management for subnets with same prefix
        end

        def id
          "addRoute"
        end

        def run session, host, *args
          # This is based on msf/plugins/auto_add_route.rb
          lhost = FIDIUS::Action::Session.get_lhost session
          sb = FIDIUS::Action::Msf.instance.get_switch_board
          session.net.config.each_route do |route|
            # Remove multicast and loopback interfaces
            next if route.subnet =~ /^(224\.|127\.)/
            next if route.subnet == '0.0.0.0'
            next if route.netmask == '255.255.255.255'
            next if (IPAddr.new "#{route.subnet}/#{route.netmask}").include? IPAddr.new(lhost)
            if not sb.route_exists?(route.subnet, route.netmask)
              puts "AutoAddRoute: Routing new subnet #{route.subnet}/#{route.netmask} through session #{session.sid}"
              sb.add_route(route.subnet, route.netmask, session)
            end
          end
        end

      end #class AddRoute
    end #module PostExploit
  end #module Action
end #module FIDIUS
