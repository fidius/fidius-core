module FIDIUS
  module Action
    module PostExploit
      class GetInterfaces
        include FIDIUS::Action::PostExploit::PostExploit

        def get_loudness_host
          10
        end

        def get_loudness_net
          0
        end

        def run session, host
          session.net.config.each_interface do |interface|
            next if interface.ip == "127.0.0.1"
            ip_mod = host.find_or_create_by_ip(interface.ip)
            ipaddr = IPAddr.new "#{interface.ip}/#{interface.netmask}"
            ip_mod.ip_mask = interface.netmask

            # This is based on msf/lib/rex/post/meterpreter/extensions/stdapi/net/interface.rb#pretty
            mac_addr = interface.mac_addr
            macocts = []
            mac_addr.each_byte { |o| macocts << o }
            macocts += [0] * (6 - macocts.size) if macocts.size < 6
            ip_mod.mac = sprintf("%02x:%02x:%02x:%02x:%02x:%02x", macocts[0], macocts[1], macocts[2], macocts[3], macocts[4], macocts[5])

            host.interfaces << ip_mod
            ip_mod.save
            host.save
          end
        end

      end #class GetInterfaces
    end #module PostExploit
  end #module Action
end #module FIDIUS
