module FIDIUS
  module Action
    module PostExploit

      autoload :GetInterfaces,     'fidius/action/postexploit/getinterfaces'

      module PostExploit
        include FIDIUS::Action

        # Runs the post exploit on the given meterpreter session.
        #
        # @return [boolean]
        def run session, host
        end

        # Returns true if this post exploit need root or admin rights to run.
        #
        # @return [boolean]
        def needs_root
          false
        end

      end #class PostExploit

      def self.run sessionID, name
        postexpl = nil
        if name == "getInterfaces"
          postexpl = FIDIUS::Action::PostExploit::GetInterfaces.new
        end
        raise RuntimeError, "wrong post exploit name" unless postexpl
        session = FIDIUS::Action::Msf.instance.framework.sessions[sessionID]
        session.load_stdapi
        session.load_priv if postexpl.needs_root
        host = get_host_for_session session
        postexpl.run session, host
      end

private

      def self.get_host_for_session session
        ip = nil
        host = nil
        config = session.net.config
        config.each_interface do |interface|
          next if interface.ip == "127.0.0.1"
          ip = interface.ip
          inter = FIDIUS::Asset::Interface.find_by_ip(ip)
          host = inter.host if inter
          break if host
        end
        return host if host
        return FIDIUS::Asset::Host.find_or_create_by_ip(ip) if ip
      end

    end #module PostExploit
  end #module Action
end #module FIDIUS
