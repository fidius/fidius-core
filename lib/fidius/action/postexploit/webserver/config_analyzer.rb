module FIDIUS
  module Action
    module PostExploit
      module Webserver
        class ConfigAnalyzer

          attr_accessor :pathes, :doc_names

          def initialize service_kind = 0, config_pathes = []
            @config_pathes = config_pathes
            @pathes = []
            @doc_names = []

            config_pathes.each { |path|
              config = File.readlines path
              case service_kind
              when 0
                analyze_iis config
              when 1
                analyze_apache config
              when 2
                analyze_nginx config
              else
                puts "Don't Know What To Do!"
              end
            }
          end

          def delete
            deleted_files = 0
            @config_pathes.each { |path|
              deleted_files += File.delete(path)
            }
            deleted_files == @config_pathes.length
          end

          private

          def analyze_nginx config
            tmp_path_array = []
            tmp_name_array = []
            config.each { |line|
              tmp_path_array << line if line.include?("root")
              tmp_name_array << line if line.include?("index")
            }
            tmp_path_array.each { |line|
              path = line.downcase.sub("root",'')
              path = strip_all path
              @pathes << path
            }
            tmp_name_array.each { |line|
              name = line.downcase.sub("index",'')
              name = strip_all name
              @doc_names = @doc_names | name.split
            }
          end

          def analyze_apache config
            tmp_path_array = []
            tmp_name_array = []
            config.each { |line|
              tmp_path_array << line if line.include?("DocumentRoot")
              tmp_name_array << line if line.include?("DirectoryIndex")
            }
            tmp_path_array.each { |line|
              path = line.downcase.sub("documentroot",'')
              path = strip_all path
              @pathes << path
            }
            tmp_name_array.each { |line|
              name = strip_all line
              name = name.downcase.sub("directoryindex",'')
              @doc_names = @doc_names | name.split
            }
          end

          def analyze_iis config
            tmp_path_array = []
            tmp_name_array = []
            config.each { |line|
              tmp_path_array << line if line.include?("Path=\"") and !line.include?("Filter")
              tmp_name_array << line if line.include?("DefaultDoc=\"")
            }
            tmp_path_array.each { |line|
              path = line.downcase.sub("path=",'')
              path = strip_all path
              @pathes << path
            }
            tmp_name_array.each { |line|
              name = strip_all line
              name = name.downcase.sub("defaultdoc=",'')
              @doc_names = @doc_names | name.split(',')
            }
          end

          def strip_all line
            line = line.gsub("\"",'')
            line = line.gsub(";",'')
            line = line.gsub("\n",'').gsub("\r",'').strip
          end

        end # class WebServerConfigAnalyzer
      end # module Webserver
    end # module PostExploit
  end  # module Action
end # module FIDIUS
